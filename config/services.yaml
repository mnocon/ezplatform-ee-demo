# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

imports:
    - { resource: controllers.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    app.query_type.menu:
        class: App\QueryType\MenuQueryType
        calls:
            - [setLanguages, [$languages$]]
        tags:
            - { name: ezpublish.query_type }

    App\Helper\LocationHelper:
        arguments:
            - '@eZ\Publish\API\Repository\ContentService'
            - '@eZ\Publish\API\Repository\LocationService'

    app.mail.sender:
        class: App\Mail\Sender
        public: true
        arguments:
            - '@mailer'
            - '@translator'
            - '@twig'
            - '%app.contact_form.sender_email%'
            - '%app.contact_form.recipient_email%'


    App\Twig\YoutubeIdExtractorExtension:
        tags:
            - { name: twig.extension }

    App\QueryType\BlockQueryType: ~

    App\Event\Subscriber\PlacesBlockSubscriber:
        arguments:
            $tagHandler: '@ezplatform.http_cache.fos_tag_handler.xkey'
            $queryType: '@App\QueryType\BlockQueryType'

    App\Event\Subscriber\TastesBlockSubscriber:
        arguments:
            $tagHandler: '@ezplatform.http_cache.fos_tag_handler.xkey'
            $queryType: '@App\QueryType\BlockQueryType'

    App\Twig\SearchResultExtractorExtension:
        tags:
            - { name: twig.extension }

    App\PremiumContent\HtmlRenderer: ~
    App\User\UserGroups: ~

    App\Twig\PremiumContentExtension:
        arguments:
            - '@App\PremiumContent\HtmlRenderer'
            - '@App\User\UserGroups'
            - '%app.premium_content.allowed_user_groups.location_ids%'
        tags:
            - { name: twig.extension }

    App\Twig\ContentDescriptionExtension:
        arguments:
        - "@ezpublish.field_helper"
        - "@?logger"
        tags:
            - { name: twig.extension }

    App\Event\TemplateAttributeBlockNameListener:
        tags:
            - { name: kernel.event_subscriber }

    App\Event\PageFieldType\Attribute\AttributeSerializationSubscriber: ~

    App\Event\Listener\RenderMenuListener:
        arguments:
            $credentialsChecker: '@EzSystems\EzRecommendationClient\Config\EzRecommendationClientCredentialsResolver'
        tags:
            - { name: kernel.event_listener, event: ezplatform_admin_ui.menu_configure.main_menu, method: renderMenu, priority: -45 }

    App\Event\Workflow\PublishOnLastStageSubscriber:
        arguments:
            $publishOnLastStageWorkflows: '%app.workflow.publish_on_last_stage%'

    App\Event\Subscriber\EndWorkflowSubscriber: ~

    App\Event\Subscriber\Recommendation\UserCollectionSubscriber:
        arguments:
            $membersUserGroupId: '%app.members_user_group_id%'
